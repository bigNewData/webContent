<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
  <!-- 扫描service注解 -->
  <context:component-scan base-package="cn.lvsen.test.service"/>

  <!--引入jdbc的配置文件-->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:my-jdbc.properties"/>
  </bean>

  <!--jdbc连接数据库基本配置-->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>

  <!--spring和mybatis结合的配置-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="mapperLocations" value="classpath:cn/lvsen/test/mapper/*Mapper.xml" />
    <!-- 分页插件 -->
    <property name="plugins">
      <array>
        <bean class="com.github.pagehelper.PageInterceptor">
          <!--少了这句话会导致空指针异常-->
          <property name="properties">
            <value />
          </property>
        </bean>
      </array>
    </property>
  </bean>

  <!--dao接口，sping会自动查找其中的类 dao ——> 数据访问层 dao映射的mapper，去掉启动报错-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="cn.lvsen.test.mapper"/>
    <!--对应上面id="sqlSessionFactory"-->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
  </bean>

  <!-- 事务管理 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!-- 配置事务通知属性 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!-- 定义事务传播属性 -->
    <tx:attributes>
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="delete*" propagation="REQUIRED"  />
      <tx:method name="change*" propagation="REQUIRED"  />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="insert*" propagation="REQUIRED" />
      <tx:method name="adjust*" propagation="REQUIRED" />
      <tx:method name="create*" propagation="REQUIRED" />
      <tx:method name="lock*" propagation="REQUIRED"  />
      <tx:method name="unlock*" propagation="REQUIRED" />
      <tx:method name="get*" propagation="SUPPORTS" />
      <tx:method name="query*" propagation="SUPPORTS" />
      <tx:method name="find*" propagation="SUPPORTS" />
      <tx:method name="select*" propagation="SUPPORTS" />
      <tx:method name="return*" propagation="SUPPORTS" />
    </tx:attributes>
  </tx:advice>

   <!--配置事务切面 -->
  <aop:config>
    <aop:pointcut id="serviceOperation" expression="execution(* cn.lvsen.test.service.impl.*.*(..)))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
  </aop:config>
  <!-- shiro配置 -->
  <!-- 自定义的realm域 -->
  <bean id="articleRealm" class="cn.lvsen.test.realm.myRealm" />
  <!-- shiro安全管理器 -->
  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <property name="realm" ref="articleRealm" />
  </bean>
  <!-- shiro过滤器 -->
  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <!-- 核心安全管理器接口，必须 -->
    <property name="securityManager" ref="securityManager" />
    <!-- shiro过滤链的定义 -->
    <property name="filterChainDefinitions">
      <value>
        /login=anon
        /user/admin*=authc
      </value>
    </property>
  </bean>
  <!-- 保证实现了shiro内部lifecycle函数的bean执行 -->
  <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
  <!-- 开启shiro注解 -->
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" />
  <!-- 开启spring注解 -->
  <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    <property name="securityManager" ref="securityManager" />
  </bean>

</beans>